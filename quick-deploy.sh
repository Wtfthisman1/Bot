#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP="91.184.242.68"
SERVER_USER="root"
SERVER_PASS="sksaPObCUT4b"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date '+%H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
run_on_server() {
    sshpass -p "$SERVER_PASS" ssh -o StrictHostKeyChecking=no "$SERVER_USER@$SERVER_IP" "$1"
}

# –§—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
copy_to_server() {
    sshpass -p "$SERVER_PASS" scp -o StrictHostKeyChecking=no "$1" "$SERVER_USER@$SERVER_IP:$2"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è
deploy() {
    log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –±—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π..."
    
    # –®–∞–≥ 1: –°–±–æ—Ä–∫–∞ JAR
    log "üì¶ –°–æ–±–∏—Ä–∞–µ–º JAR —Ñ–∞–π–ª..."
    if ./gradlew bootJar; then
        success "JAR —Ñ–∞–π–ª —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ JAR —Ñ–∞–π–ª–∞"
        return 1
    fi
    
    # –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    log "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    run_on_server "mkdir -p /root/Bot/build/libs"
    
    # –®–∞–≥ 3: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ JAR –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    log "üì§ –ö–æ–ø–∏—Ä—É–µ–º JAR –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    if copy_to_server "build/libs/bot.jar" "/root/Bot/build/libs/"; then
        success "JAR —Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
    else
        error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ JAR —Ñ–∞–π–ª–∞"
        return 1
    fi
    
    # –®–∞–≥ 4: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    log "‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
    run_on_server "cd /root/Bot && docker-compose down"
    
    # –®–∞–≥ 5: –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
    log "üî® –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑..."
    if run_on_server "cd /root/Bot && docker-compose build --build-arg CACHEBUST=$(date +%s)"; then
        success "Docker –æ–±—Ä–∞–∑ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω"
    else
        error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ Docker –æ–±—Ä–∞–∑–∞"
        return 1
    fi
    
    # –®–∞–≥ 6: –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    log "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
    if run_on_server "cd /root/Bot && export BOT_TOKEN=7393663223:AAHDr3PXp-Ty2_zx-PLnHEGidpv6aK0Ai10 && export ADMIN_CHAT_ID=6063832614 && export GITHUB_REPOSITORY=Wtfthisman1/Bot && docker-compose up -d"; then
        success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
    else
        error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
        return 1
    fi
    
    # –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
    sleep 5
    if run_on_server "docker ps | grep telegram-bot"; then
        success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    else
        warning "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö"
    fi
    
    # –®–∞–≥ 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ health check
    log "üè• –ü—Ä–æ–≤–µ—Ä—è–µ–º health check..."
    sleep 10
    if curl -s http://$SERVER_IP:8080/actuator/health | grep -q "UP"; then
        success "Health check –ø—Ä–æ–π–¥–µ–Ω! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        warning "Health check –Ω–µ –ø—Ä–æ—à–µ–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏"
    fi
    
    log "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
logs() {
    log "üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏..."
    run_on_server "docker logs telegram-bot --tail 50 -f"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
status() {
    log "üìä –°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    run_on_server "docker ps | grep telegram-bot"
    echo ""
    log "üè• Health check:"
    curl -s http://$SERVER_IP:8080/actuator/health | jq . 2>/dev/null || curl -s http://$SERVER_IP:8080/actuator/health
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
stop() {
    log "‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
    run_on_server "cd /root/Bot && docker-compose down"
    success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
start() {
    log "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
    run_on_server "cd /root/Bot && export BOT_TOKEN=7393663223:AAHDr3PXp-Ty2_zx-PLnHEGidpv6aK0Ai10 && export ADMIN_CHAT_ID=6063832614 && export GITHUB_REPOSITORY=Wtfthisman1/Bot && docker-compose up -d"
    success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
restart() {
    log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
    stop
    sleep 2
    start
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    case "${1:-deploy}" in
        "deploy")
            deploy
            ;;
        "logs")
            logs
            ;;
        "status")
            status
            ;;
        "stop")
            stop
            ;;
        "start")
            start
            ;;
        "restart")
            restart
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
            echo ""
            echo "–ö–æ–º–∞–Ω–¥—ã:"
            echo "  deploy   - –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π (—Å–±–æ—Ä–∫–∞ + —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ)"
            echo "  logs     - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
            echo "  status   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
            echo "  stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
            echo "  start    - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
            echo "  restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
            echo ""
            echo "–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è deploy"
            ;;
    esac
}

main "$@"

