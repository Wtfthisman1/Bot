plugins {
	id 'java'
	id 'org.springframework.boot'            version '3.3.12'
	id 'io.spring.dependency-management'     version '1.1.7'
}

group   = 'com.example'
version = '0.0.1-SNAPSHOT'

java { 
	toolchain.languageVersion = JavaLanguageVersion.of(17) 
}

bootJar { 
	archiveFileName = 'bot.jar'
	launchScript()
	
	// Явно включаем статические ресурсы
	from('src/main/resources') {
		include 'static/**'
		include 'application.properties'
		include 'logback.xml'
		include 'pythonScript/**'
	}
}

repositories { 
	mavenCentral() 
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.telegram:telegrambots:6.9.7.1'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'

	compileOnly         'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly    'org.junit.platform:junit-platform-launcher'
}

// Оптимизация сборки
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
	options.compilerArgs += ['-parameters']
	options.compilerArgs += ['-Xlint:unchecked', '-Xlint:deprecation']
}

// Кеширование для ускорения сборки
configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

tasks.named('test') { 
	useJUnitPlatform()
	maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

// Проверка стиля кода (временно отключено)
// checkstyle {
// 	toolVersion = '10.12.5'
// 	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
// 	configProperties = [
// 		'baseDir': "${rootDir}"
// 	]
// }

// Задача для очистки
task cleanLogs(type: Delete) {
	delete 'logs'
	delete 'build'
	delete '.gradle'
}

// Задача для проверки безопасности зависимостей
task securityCheck {
	doLast {
		println "Проверка безопасности зависимостей..."
		// Здесь можно добавить проверку через OWASP Dependency Check
	}
}





