package com.example.demo.logging;

import ch.qos.logback.classic.Level;
import ch.qos.logback.classic.spi.ILoggingEvent;
import ch.qos.logback.core.AppenderBase;
import com.example.demo.service.TelegramBot;
import org.slf4j.MDC;

import java.time.Instant;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;

/**
 * –ê–ø–ø–µ–Ω–¥–µ—Ä, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è ERROR+ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤ Telegram.
 */
public class TelegramLogAppender extends AppenderBase<ILoggingEvent> {

    /** –°–∏–Ω–≥–ª—Ç–æ–Ω-—Å—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∏–∑ Spring. */
    private static volatile TelegramBot bot;

    /** Chat-ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ‚Äî –∑–∞–¥–∞—ë–º —Å—Ä–∞–∑—É –∫–æ–Ω—Å—Ç–∞–Ω—Ç–æ–π. */
    private static final long ADMIN_CHAT_ID = 123456789L;   // ‚Üê –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID

    private static final DateTimeFormatter TS_FMT =
            DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")
                    .withZone(ZoneId.systemDefault());

    /*‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  –ò–Ω—ä–µ–∫—Ü–∏—è  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ*/

    /** –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ Spring (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ TelegramBot.@PostConstruct). */
    public static void init(TelegramBot botBean) {
        bot = botBean;
    }

    /*‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ*/

    @Override
    protected void append(ILoggingEvent event) {
        if (bot == null) return;
        if (!event.getLevel().isGreaterOrEqual(Level.ERROR)) return;

        String timestamp = TS_FMT.format(Instant.ofEpochMilli(event.getTimeStamp()));

        String user   = MDC.get("user");
        String chatId = MDC.get("chatId");

        StringBuilder sb = new StringBuilder()
                .append("‚ùó *–û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏*\n")
                .append("üïí `").append(timestamp).append("`\n");

        if (user != null || chatId != null) {
            sb.append("üë§ ");
            if (user   != null) sb.append("*").append(escape(user)).append("* ");
            if (chatId != null) sb.append("(`").append(chatId).append("`)");
            sb.append('\n');
        }

        sb.append("\n```")
                .append(escape(event.getFormattedMessage()))
                .append("```");

        String message = truncate(sb.toString(), 4096);

        try {
            bot.sendMessage(ADMIN_CHAT_ID, message);
        } catch (Exception ex) {
            addError("Failed to send log to Telegram", ex);
        }
    }

    /*‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ*/

    private static String escape(String src) {
        return src.replaceAll("([_\\*\\[\\]()~`>#+\\-=|{}.!])", "\\\\$1");
    }

    private static String truncate(String s, int max) {
        return s.length() <= max ? s
                : s.substring(0, max - 3) + "...";
    }
}
