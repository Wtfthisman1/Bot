package com.example.demo.service;

import com.example.demo.queue.JobQueue;
import com.example.demo.queue.ProcessingJob;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.core.task.TaskExecutor;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.objects.Audio;
import org.telegram.telegrambots.meta.api.objects.Document;
import org.telegram.telegrambots.meta.api.objects.Video;
import org.telegram.telegrambots.meta.api.objects.Voice;

import java.nio.file.Path;
import java.util.List;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import java.util.ArrayList;

@Service
@RequiredArgsConstructor
@Slf4j
public class MessageHandler {

    private static final Pattern URL_PATTERN = Pattern.compile(
        "https?://[\\w\\d\\-._~:/?#\\[\\]@!$&'()*+,;=%]+");

    private final TaskExecutor taskExecutor;
    private final TranscribeExecutor transcriber;
    private final TelegramFileDownloader fileDownloader;
    private final JobQueue jobQueue;
    private final MessageSender messageSender;
    private final ActionChoiceService actionChoiceService;

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    public void handleText(long chatId, String text, String name) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–∂–∏–¥–∞—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ
        if (actionChoiceService.hasPendingAction(chatId)) {
            actionChoiceService.handleActionChoice(chatId, text);
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏
        List<String> urls = extractUrls(text);
        
        if (!urls.isEmpty()) {
            // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ —Å—Å—ã–ª–∫–∞, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è
            if (urls.size() == 1) {
                actionChoiceService.handleUrlWithChoice(chatId, urls.get(0), name);
            } else {
                // –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Å—ã–ª–æ–∫, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ —Ä–∞–Ω—å—à–µ (—Ç–æ–ª—å–∫–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞–Ω–∏–µ)
                handleUrls(chatId, urls, name);
            }
        } else {
            messageSender.sendMessage(chatId, 
                "üí° –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ:\n" +
                "‚Ä¢ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏\n" +
                "‚Ä¢ –ê—É–¥–∏–æ –∏–ª–∏ –≤–∏–¥–µ–æ —Ñ–∞–π–ª\n" +
                "‚Ä¢ –°—Å—ã–ª–∫—É –Ω–∞ YouTube/Vimeo/TikTok\n" +
                "‚Ä¢ –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /upload –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤");
        }
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    public void handleVoice(long chatId, Voice voice, String name) {
        messageSender.sendChatAction(chatId, "typing");
        messageSender.sendMessage(chatId, "üé§ –ü–æ–ª—É—á–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...");
        
        taskExecutor.execute(() -> {
            try {
                Path voiceFile = fileDownloader.downloadVoice(voice.getFileId(), chatId);
                Path transcript = transcriber.run(chatId, voiceFile);
                messageSender.sendTranscript(chatId, transcript);
            } catch (Exception e) {
                log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è", e);
                
                // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                String errorMessage = getVoiceErrorMessage(e);
                messageSender.sendMessage(chatId, errorMessage);
            }
        });
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞—É–¥–∏–æ —Ñ–∞–π–ª
     */
    public void handleAudio(long chatId, Audio audio, String name) {
        messageSender.sendChatAction(chatId, "typing");
        messageSender.sendMessage(chatId, "üéµ –ü–æ–ª—É—á–µ–Ω –∞—É–¥–∏–æ —Ñ–∞–π–ª. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...");
        
        taskExecutor.execute(() -> {
            try {
                Path audioFile = fileDownloader.downloadAudio(audio.getFileId(), chatId, audio.getFileName() != null ? audio.getFileName() : "audio.mp3");
                Path transcript = transcriber.run(chatId, audioFile);
                messageSender.sendTranscript(chatId, transcript);
            } catch (Exception e) {
                log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞", e);
                messageSender.sendMessage(chatId, "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞");
            }
        });
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∏–¥–µ–æ —Ñ–∞–π–ª
     */
    public void handleVideo(long chatId, Video video, String name) {
        messageSender.sendChatAction(chatId, "typing");
        messageSender.sendMessage(chatId, "üé¨ –ü–æ–ª—É—á–µ–Ω –≤–∏–¥–µ–æ —Ñ–∞–π–ª. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...");
        
        taskExecutor.execute(() -> {
            try {
                Path videoFile = fileDownloader.downloadVideo(video.getFileId(), chatId, video.getFileName() != null ? video.getFileName() : "video.mp4");
                Path transcript = transcriber.run(chatId, videoFile);
                messageSender.sendTranscript(chatId, transcript);
            } catch (Exception e) {
                log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–∞", e);
                messageSender.sendMessage(chatId, "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–∞");
            }
        });
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç
     */
    public void handleDocument(long chatId, Document document, String name) {
        String fileName = document.getFileName();
        if (fileName != null && isVideoFile(fileName)) {
            messageSender.sendChatAction(chatId, "typing");
            messageSender.sendMessage(chatId, "üìÑ –ü–æ–ª—É—á–µ–Ω –≤–∏–¥–µ–æ –¥–æ–∫—É–º–µ–Ω—Ç. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...");
            
            taskExecutor.execute(() -> {
                try {
                    Path docFile = fileDownloader.downloadDocument(document.getFileId(), chatId, fileName);
                    Path transcript = transcriber.run(chatId, docFile);
                    messageSender.sendTranscript(chatId, transcript);
                } catch (Exception e) {
                    log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞", e);
                    messageSender.sendMessage(chatId, "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞");
                }
            });
        } else {
            messageSender.sendMessage(chatId, "‚ùå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã. –û—Ç–ø—Ä–∞–≤—å—Ç–µ .mp4, .avi, .mkv");
        }
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å—Å—ã–ª–∫–∏
     */
    public void handleUrls(long chatId, List<String> urls, String name) {
        if (urls.size() > 5) {
            messageSender.sendMessage(chatId, "‚ö†Ô∏è –ú–∞–∫—Å–∏–º—É–º 5 —Å—Å—ã–ª–æ–∫ –∑–∞ —Ä–∞–∑. –û–±—Ä–∞–±–æ—Ç–∞—é –ø–µ—Ä–≤—ã–µ 5.");
            urls = urls.subList(0, 5);
        }
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å—Å—ã–ª–∫–∏
        List<String> supportedUrls = new ArrayList<>();
        List<String> unsupportedUrls = new ArrayList<>();
        
        for (String url : urls) {
            if (isSupportedVideoUrl(url)) {
                supportedUrls.add(url);
            } else {
                unsupportedUrls.add(url);
            }
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å—Å—ã–ª–∫–∞—Ö
        if (!unsupportedUrls.isEmpty()) {
            StringBuilder warning = new StringBuilder("‚ö†Ô∏è –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å—Å—ã–ª–∫–∏:\n");
            for (String url : unsupportedUrls) {
                warning.append("‚Ä¢ ").append(url).append("\n");
            }
            warning.append("\nüîó –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ —Å YouTube, Vimeo, TikTok, Instagram, Twitter/X, Facebook");
            messageSender.sendMessage(chatId, warning.toString());
        }
        
        if (supportedUrls.isEmpty()) {
            messageSender.sendMessage(chatId, "‚ùå –ù–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å—Å—ã–ª–æ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏");
            return;
        }
        
        messageSender.sendChatAction(chatId, "typing");
        messageSender.sendMessage(chatId, 
            String.format("üîó –ù–∞–π–¥–µ–Ω–æ %d –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å—Å—ã–ª–æ–∫. –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É...", supportedUrls.size()));
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á–∏ –≤ –æ—á–µ—Ä–µ–¥—å —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å—Å—ã–ª–æ–∫
        for (String url : supportedUrls) {
            jobQueue.enqueue(ProcessingJob.newLink(chatId, url));
        }
    }

    /**
     * –ò–∑–≤–ª–µ–∫–∞–µ—Ç URL –∏–∑ —Ç–µ–∫—Å—Ç–∞
     */
    private List<String> extractUrls(String text) {
        List<String> urls = new ArrayList<>();
        Matcher matcher = URL_PATTERN.matcher(text);
        while (matcher.find()) {
            urls.add(matcher.group());
        }
        return urls;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª –≤–∏–¥–µ–æ
     */
    private boolean isVideoFile(String fileName) {
        if (fileName == null) return false;
        String lower = fileName.toLowerCase();
        return lower.endsWith(".mp4") || lower.endsWith(".avi") || 
               lower.endsWith(".mkv") || lower.endsWith(".mov") || 
               lower.endsWith(".webm");
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º –≤–∏–¥–µ–æ-—Ö–æ—Å—Ç–∏–Ω–≥–æ–º
     */
    private boolean isSupportedVideoUrl(String url) {
        if (url == null) return false;
        
        String lowerUrl = url.toLowerCase();
        
        // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
        return lowerUrl.contains("youtube.com") || 
               lowerUrl.contains("youtu.be") ||
               lowerUrl.contains("vimeo.com") ||
               lowerUrl.contains("tiktok.com") ||
               lowerUrl.contains("instagram.com") ||
               lowerUrl.contains("twitter.com") ||
               lowerUrl.contains("x.com") ||
               lowerUrl.contains("facebook.com") ||
               lowerUrl.contains("fb.com");
    }

    /**
     * –§–æ—Ä–º–∏—Ä—É–µ—Ç –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
     */
    private String getVoiceErrorMessage(Exception e) {
        String errorText = e.getMessage() != null ? e.getMessage().toLowerCase() : "";
        
        if (errorText.contains("–Ω–µ —Å–º–æ–≥ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å") || errorText.contains("empty transcription")) {
            return """
                üé§ –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
                
                –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
                ‚Ä¢ –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–º–µ–Ω–µ–µ 3 —Å–µ–∫—É–Ω–¥)
                ‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ—á—å –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
                ‚Ä¢ –ü–ª–æ—Ö–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∏
                ‚Ä¢ –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —è–∑—ã–∫
                
                üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:
                ‚Ä¢ –ó–∞–ø–∏—Å–∞—Ç—å –±–æ–ª–µ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                ‚Ä¢ –ì–æ–≤–æ—Ä–∏—Ç—å —á–µ—Ç—á–µ –∏ –≥—Ä–æ–º—á–µ
                ‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä—É—Å—Å–∫–∏–π –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
                """;
        }
        
        if (errorText.contains("timeout")) {
            return """
                ‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                
                –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
                ‚Ä¢ –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                ‚Ä¢ –í—ã—Å–æ–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                
                üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:
                ‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                ‚Ä¢ –ü–æ–¥–æ–∂–¥–∞—Ç—å –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                """;
        }
        
        if (errorText.contains("model") || errorText.contains("whisper")) {
            return """
                ü§ñ –û—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏
                
                –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å Whisper.
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
                """;
        }
        
        // –û–±—â–∞—è –æ—à–∏–±–∫–∞
        return """
            ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:
            ‚Ä¢ –ó–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ
            ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∏
            ‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π —è–∑—ã–∫
            """;
    }
}
