package com.example.demo.service;

import com.example.demo.queue.JobQueue;
import com.example.demo.queue.ProcessingJob;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import java.nio.file.Files;
import java.nio.file.Path;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

@Service
@RequiredArgsConstructor
@Slf4j
public class DownloadService {
    
    private final StorageManager storageManager;
    private final JobQueue jobQueue;
    private final MessageSender messageSender;
    
    // –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    private final Map<String, DownloadInfo> downloads = new HashMap<>();
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç –∑–∞–¥–∞—á—É –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞
     */
    public void createDownloadTask(long chatId, String url, String name) {
        try {
            // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
            String downloadId = UUID.randomUUID().toString();

            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
            ProcessingJob job = ProcessingJob.newDownload(chatId, url, downloadId);
            jobQueue.enqueue(job);

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≥—Ä—É–∑–∫–µ
            downloads.put(downloadId, new DownloadInfo(chatId, url, name, System.currentTimeMillis()));

            // –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ —Ñ–∞–π–ª –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω
            messageSender.sendMessage(chatId,
                "üì• –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞—Ç–∞!\n\n" +
                "üîó –°—Å—ã–ª–∫–∞: " + url + "\n" +
                "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + name + "\n\n" +
                "‚è≥ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è. –°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏.");
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ –∑–∞–≥—Ä—É–∑–∫–∏", e);
            messageSender.sendMessage(chatId, "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ –∑–∞–≥—Ä—É–∑–∫–∏: " + e.getMessage());
        }
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É
     */
    public void handleDownloadComplete(String downloadId, Path filePath) {
        DownloadInfo info = downloads.get(downloadId);
        if (info == null) {
            log.warn("–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ: {}", downloadId);
            return;
        }
        
        try {
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            String downloadLink = generateDownloadLink(filePath, info);
            
            String message = """
                ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!
                
                üìÅ –§–∞–π–ª: %s
                üìè –†–∞–∑–º–µ—Ä: %s
                üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: %s
                
                üîó <a href="%s">–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª</a>
                
                ‚è∞ –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 24 —á–∞—Å–∞
                """.formatted(
                    filePath.getFileName(),
                    formatFileSize(Files.size(filePath)),
                    info.userName(),
                    downloadLink
                );
            
            messageSender.sendMessage(info.chatId(), message, "HTML");
            
            // –£–¥–∞–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≥—Ä—É–∑–∫–µ
            downloads.remove(downloadId);
            
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏", e);
            messageSender.sendMessage(info.chatId(), 
                "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏: " + e.getMessage());
        }
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
     */
    public void handleDownloadError(String downloadId, String error) {
        DownloadInfo info = downloads.get(downloadId);
        if (info == null) {
            log.warn("–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ: {}", downloadId);
            return;
        }
        
        messageSender.sendMessage(info.chatId(), 
            "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:\n\n" + error);
        
        // –£–¥–∞–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≥—Ä—É–∑–∫–µ
        downloads.remove(downloadId);
    }
    
    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
     */
    private String generateDownloadLink(Path filePath, DownloadInfo info) {
        // TODO: –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –¥–æ–º–µ–Ω
        // –∏ –≤–æ–∑–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        return "http://localhost:8080/download/" + filePath.getFileName();
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
     */
    private String formatFileSize(long bytes) {
        if (bytes < 1024) return bytes + " B";
        if (bytes < 1024 * 1024) return String.format("%.1f KB", bytes / 1024.0);
        if (bytes < 1024 * 1024 * 1024) return String.format("%.1f MB", bytes / (1024.0 * 1024.0));
        return String.format("%.1f GB", bytes / (1024.0 * 1024.0 * 1024.0));
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    public List<DownloadInfo> getActiveDownloads(long chatId) {
        return downloads.values().stream()
                .filter(info -> info.chatId() == chatId)
                .collect(java.util.stream.Collectors.toList());
    }
    
    /**
     * –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ
     */
    public record DownloadInfo(long chatId, String url, String userName, long startTime) {}
}
