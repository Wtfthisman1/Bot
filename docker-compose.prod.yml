services:
  bot:
    # Собираем образ локально
    build:
      context: .
      dockerfile: Dockerfile
    image: bot:latest
    container_name: telegram-bot
    ports:
      - "8080:8080"
    environment:
      # Обязательные переменные (устанавливаются на сервере)
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_CHAT_ID=${ADMIN_CHAT_ID}
      
      # URL для загрузки и скачивания файлов
      - UPLOAD_BASE_URL=${UPLOAD_BASE_URL:-http://localhost:8080}
      - DOWNLOAD_BASE_URL=${DOWNLOAD_BASE_URL:-http://localhost:8080}
      
      # Опционально: предзагрузить модели при старте
      # - WHISPER_PRELOAD_MODELS=small,medium
      # - WHISPER_DEVICE=cpu
      # - WHISPER_COMPUTE_TYPE=int8
      
      # Настройки JVM
      - JAVA_OPTS=-Xmx2g -Xms512m -XX:+UseG1GC -XX:+UseContainerSupport
      
      # Настройки приложения
      - UPLOAD_DIR=/app/upload
      - APP_STORAGE_BASE=/app/upload/videos
      - XDG_CACHE_HOME=/app/.cache
      - HF_HOME=/app/.cache/huggingface
    volumes:
      # Пользовательские файлы
      - ./upload:/app/upload
      # Логи приложения
      - ./logs:/app/logs
      # Кеш моделей Whisper (сохраняется между пересборками!)
      - whisper_cache:/app/.cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    networks:
      - bot-network

volumes:
  # Именованный том для кеша моделей
  whisper_cache:
    driver: local

networks:
  bot-network:
    driver: bridge
